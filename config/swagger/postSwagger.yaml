openapi: 3.0.3
info:
  version: 1.0.0
  title: SMU_UMC_MINI_PROJECT - Swagger
  description: SMU_UMC_MINI_PROJECT - Swagger입니다.
paths:
  /api/signup:
    post:
      tags:
        - User
      summary: User signup
      description: Register a new user
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              studentId:
                type: string
                example: 'student123'
              password:
                type: string
                example: 'password'
              name:
                type: string
                example: '정준영'
              major:
                type: string
                example: '컴퓨터과학'
      responses:
        200:
          description: Signup successful
          schema:
            type: object
            properties:
              isSuccess:
                type: boolean
                example: true
              code:
                type: integer
                example: 2001
              message:
                type: string
                example: '회원가입 성공입니다.'
        400:
          description: Bad request
          schema:
            type: object
            properties:
              isSuccess:
                type: boolean
                example: false
              code:
                type: string
                example: 'COMMON001'
              message:
                type: string
                example: '잘못된 요청입니다.'
        401:
          description: Unauthorized
          schema:
            type: object
            properties:
              isSuccess:
                type: boolean
                example: false
              code:
                type: string
                example: 'MEMBER002'
              message:
                type: string
                example: '이미 가입하였습니다.'
        500:
          description: Internal server error
          schema:
            type: object
            properties:
              isSuccess:
                type: boolean
                example: false
              code:
                type: string
                example: 'COMMON000'
              message:
                type: string
                example: '서버 에러, 관리자에게 문의 바랍니다.'
  /api/login:
    post:
      tags:
        - User
      summary: User login
      description: Authenticate a user
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              studentId:
                type: string
                example: 'student123'
              password:
                type: string
                example: 'password'
      responses:
        200:
          description: Login successful
          schema:
            type: object
            properties:
              isSuccess:
                type: boolean
                example: true
              code:
                type: integer
                example: 2000
              message:
                type: string
                example: '로그인 성공'
        400:
          description: Bad request
          schema:
            type: object
            properties:
              isSuccess:
                type: boolean
                example: false
              code:
                type: string
                example: 'COMMON001'
              message:
                type: string
                example: '잘못된 요청입니다.'
        401:
          description: Unauthorized
          schema:
            type: object
            properties:
              isSuccess:
                type: boolean
                example: false
              code:
                type: string
                example: 'MEMBER002'
              message:
                type: string
                example: '입력하신 정보가 없습니다. 회원가입을 먼저 진행해주세요.'
        500:
          description: Internal server error
          schema:
            type: object
            properties:
              isSuccess:
                type: boolean
                example: false
              code:
                type: string
                example: 'COMMON000'
              message:
                type: string
                example: '서버 에러, 관리자에게 문의 바랍니다.'
      components:
        schemas:
          SignupRequest:
            type: object
            required:
              - studentId
              - password
              - name
              - major
            properties:
              studentId:
                type: string
              password:
                type: string
              name:
                type: string
              major:
                type: string
          SignupResponse:
            type: object
            properties:
              isSuccess:
                type: boolean
              code:
                type: integer
              message:
                type: string
          LoginRequest:
            type: object
            required:
              - studentId
              - password
            properties:
              studentId:
                type: string
              password:
                type: string
          LoginResponse:
            type: object
            properties:
              isSuccess:
                type: boolean
              code:
                type: integer
              message:
                type: string
          ErrorResponse:
            type: object
            properties:
              isSuccess:
                type: boolean
              code:
                type: string
              message:
                type: string
  /api/posts:
    get:
      tags:
        - Posts
      summary: 게시글 전체 조회
      description: 게시글 전체 조회하기
      responses:
        '200':
          description: 게시글 전체 조회 성공!
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                      example: '60d21b4667d0d8992e610c85'
                    title:
                      type: string
                      example: '첫번째 게시글'
                    content:
                      type: string
                      example: '이것은 첫번째 게시글의 내용입니다.'
                    createdAt:
                      type: string
                      format: date-time
                      example: '2023-06-19T12:34:56Z'
                    updatedAt:
                      type: string
                      format: date-time
                      example: '2023-06-19T12:34:56Z'
        '500':
          description: 서버 오류
    post:
      tags:
        - Posts
      summary: 게시글 생성
      description: 게시글 생성하기
      parameters:
        - name: Posts
          in: body
          required: true
          schema:
            properties:
              title:
                type: string
                description: 게시글 제목
                example: 수정할 제목이에요
              content:
                type: string
                description: 게시글 내용
                example: 나는야 슈퍼 개발자가 될거에요!
      responses:
        '201':
          description: 게시글 생성 성공!
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                    example: '60d21b4667d0d8992e610c89'
                  title:
                    type: string
                    example: '새로운 게시글 제목'
                  content:
                    type: string
                    example: '이것은 새로운 게시글의 내용입니다.'
                  createdAt:
                    type: string
                    format: date-time
                    example: '2023-06-19T12:34:56Z'
                  updatedAt:
                    type: string
                    format: date-time
                    example: '2023-06-19T12:34:56Z'
        '500':
          description: 서버 오류
  /api/posts/{post_id}:
    get:
      tags:
        - Posts
      summary: 게시글 1개 조회
      description: 게시글 ID로 게시글 1개 조회하기
      parameters:
        - name: post_id
          in: path
          required: true
          description: 조회할 게시글의 ID
          schema:
            type: string
      responses:
        '200':
          description: 게시글 1개 조회 성공!
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                    example: '60d21b4667d0d8992e610c85'
                  title:
                    type: string
                    example: '첫번째 게시글'
                  content:
                    type: string
                    example: '이것은 첫번째 게시글의 내용입니다.'
                  createdAt:
                    type: string
                    format: date-time
                    example: '2023-06-19T12:34:56Z'
                  updatedAt:
                    type: string
                    format: date-time
                    example: '2023-06-19T12:34:56Z'
        '404':
          description: 게시글을 찾을 수 없음
        '500':
          description: 서버 오류
    patch:
      tags:
        - Posts
      summary: 게시글 수정
      description: 게시글 ID로 게시글 수정하기
      parameters:
        - name: post_id
          in: path
          required: true
          description: 조회할 게시글의 ID
          schema:
            type: string
        - name: signIn
          in: body
          required: true
          schema:
            properties:
              title:
                type: string
                description: 게시글 제목
                example: 안녕하세요
              content:
                type: string
                description: 게시글 내용
                example: 나는야 개발자가 될거애요
          responses:
          '200':
            description: 회원 가입 성공!
            schema:
              type: object
              properties:
                status:
                  type: integer
                  example: 200
                isSuccess:
                  type: boolean
                  example: true
                code:
                  type: integer
                  example: 2000
                message:
                  type: string
                  example: 'success!'
                data:
                  type: object
                  example:
                    { 'email': 'swaggerTest@mail.com', 'name': 'swagger' }

          '400':
            description: 잘못된 요청
            schema:
              type: object
              properties:
                status:
                  type: integer
                  example: 400
                isSuccess:
                  type: boolean
                  example: false
                code:
                  type: integer
                  example: COMMON001
                message:
                  type: string
                  example: 잘못된 요청입니다
          '500':
            description: 서버 에러
            schema:
              type: object
              properties:
                status:
                  type: integer
                  example: 500
                isSuccess:
                  type: boolean
                  example: false
                code:
                  type: integer
                  example: COMMON000
                message:
                  type: string
                  example: 서버 에러, 관리자에게 문의 바랍니다.
    delete:
      tags:
        - Posts
      summary: 게시글 삭제
      description: 게시글 ID로 게시글 삭제하기
      parameters:
        - name: post_id
          in: path
          required: true
          description: 삭제할 게시글의 ID
          schema:
            type: string
      responses:
        '200':
          description: 게시글 삭제 성공!
        '404':
          description: 게시글을 찾을 수 없음
        '500':
          description: 서버 오류
  /api/image/{post_id}:
    get:
      tags:
        - Image
      summary: 이미지 조회
      parameters:
        - name: post_id
          in: path
          required: true
          description: '이미지 조회할 게시글의 ID'
          type: string
      responses:
        '200':
          description: 이미지 조회 완료!
        '500':
          description: 서버 오류
    post:
      tags:
        - Image
      summary: 이미지 업로드
      consumes:
        - multipart/form-data # 문서 타입 지정
      parameters:
        - name: post_id
          in: path
          required: true
          description: '이미지 업로드할 게시글의 ID'
          type: string
        - name: image
          in: formData
          required: true
          type: file
          description: '업로드할 이미지 파일'
        # 아래 주석은 로그인 구현후 풀 것
        # - in: formData
        #   name: userId
        #   type: integer
        #   description: 사용자 아이디
      responses:
        '200':
          description: 이미지 업로드 완료!
        '404':
          description: 이미지를 찾을 수 없음
        '500':
          description: 서버 오류
  /api/comments/{post_id}:
    get:
      tags:
        - Comments
      summary: 댓글 조회
      description: 게시글 ID로 댓글 조회하기
      parameters:
        - name: post_id
          in: path
          required: true
          description: 댓글 조회할 게시글의 ID
          schema:
            type: string
      responses:
        '200':
          description: 댓글 조회 성공!
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                    example: '66754d35f8a8a932ceeddd17'
                  post:
                    type: string
                    example: '667455c79bd3ba64469a44a9'
                  content:
                    type: string
                    example: '이것은 첫번째 게시글의 내용입니다.'
                  isDeleted: 'false'
                  text:
                    type: string
                    example: '이것은 댓글 내용입니다.'
                  depth:
                    type: number
                    example: '1`'
                  createdAt:
                    type: string
                    format: date-time
                    example: '2023-06-19T12:34:56Z'
                  updatedAt:
                    type: string
                    format: date-time
                    example: '2023-06-19T12:34:56Z'
        '404':
          description: 댓글을 찾을 수 없음
        '500':
          description: 서버 오류
    post:
      tags:
        - Comments
      summary: 댓글 생성
      description: 게시글 ID로 댓글 생성하기
      parameters:
        - name: post_id
          in: path
          required: true
          description: 댓글 생성할 게시글의 ID
          schema:
            type: string
        - name: signIn
          in: body
          required: true
          schema:
            properties:
              text:
                type: string
                description: 생성할 댓글 내용
                example: 나는 생성할 댓글 내용이야!
      responses:
        '200':
          description: 댓글 생성 성공!
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                    example: '66754d35f8a8a932ceeddd17'
                  post:
                    type: string
                    example: '667455c79bd3ba64469a44a9'
                  isDeleted: 'false'
                  text:
                    type: string
                    example: '이것은 생성된 댓글 내용입니다.'
                  depth:
                    type: number
                    example: '1`'
                  createdAt:
                    type: string
                    format: date-time
                    example: '2023-06-19T12:34:56Z'
                  updatedAt:
                    type: string
                    format: date-time
                    example: '2023-06-19T12:34:56Z'
        '404':
          description: 댓글을 찾을 수 없음
        '500':
          description: 서버 오류
  /api/comment/{post_id}/{comment_id}:
    patch:
      tags:
        - Comments
      summary: 댓글 수정
      description: 게시글 ID와 댓글 ID로 댓글 수정하기
      parameters:
        - name: post_id
          in: path
          required: true
          description: 댓글 수정할 게시글의 ID
          schema:
            type: string
        - name: comment_id
          in: path
          required: true
          description: 댓글 수정할 댓글의 ID
          schema:
            type: string
        - name: signIn
          in: body
          required: true
          schema:
            properties:
              text:
                type: string
                description: 수정할 댓글 내용
                example: 호우!
      responses:
        '200':
          description: 댓글 수정 성공!
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                    example: '66754d35f8a8a932ceeddd17'
                  post:
                    type: string
                    example: '667455c79bd3ba64469a44a9'
                  isDeleted: 'false'
                  text:
                    type: string
                    example: '이것은 수정된 댓글 내용입니다.'
                  parentComment:
                    type: string
                    string: 'null'
                  depth:
                    type: number
                    example: '1`'
                  createdAt:
                    type: string
                    format: date-time
                    example: '2023-06-19T12:34:56Z'
                  updatedAt:
                    type: string
                    format: date-time
                    example: '2023-06-19T12:34:56Z'
        '404':
          description: 댓글을 찾을 수 없음
        '500':
          description: 서버 오류
    delete:
      tags:
        - Comments
      summary: 댓글 삭제
      description: 게시글 ID와 댓글 ID로 댓글 삭제하기
      parameters:
        - name: post_id
          in: path
          required: true
          description: 삭제할 댓글의 게시글 ID
          schema:
            type: string
        - name: comment_id
          in: path
          required: true
          description: 삭제할 댓글의 ID
          schema:
            type: string
      responses:
        '200':
          description: 댓글 삭제 성공!
        '404':
          description: 댓글을 찾을 수 없음
        '500':
          description: 서버 오류
